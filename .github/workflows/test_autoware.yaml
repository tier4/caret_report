name: Test with Autoware

# cspell:ignore localtime

on:
  schedule:
    - cron: 0 16 * * * # run at 1 AM JST
  # pull_request:
  workflow_dispatch:

env:
  IMAGE: tier4/caret_report

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          - ros_version: galactic
            dockerfile: Dockerfile_galactic.dockerfile
            do_test: false
          - ros_version: humble
            dockerfile: Dockerfile
            do_test: true

    steps:
      - name: Check out repository
        uses: actions/checkout@v3.1.0

      # - name: Cache Docker layers
      #   uses: actions/cache@v3
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ github.ref }}-${{ github.sha }}
      #     restore-keys: |
      #       ${{ github.ref }}-${{ github.sha }}
      #       ${{ github.ref }}
      #       refs/head/main

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Create tag
        run: |
          SHA=${{ github.sha }}
          TAG=${IMAGE}_${{ matrix.ros_version }}:$(TZ=UTC-9 date '+%Y%m')-${SHA:0:7}
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            LATEST=${IMAGE}:latest
            # echo "TAGS=$TAG,$LATEST" >> $GITHUB_ENV
            echo "TAGS=$TAG" >> $GITHUB_ENV
          else
            echo "TAGS=$TAG" >> $GITHUB_ENV
          fi
          echo TAG $TAG

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/${{ matrix.dockerfile }}
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          load: true
          tags: ${{ env.TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Get reference trace data
        if: ${{ matrix.do_test }}

        run: |
          wget -nv https://github.com/tier4/CARET_report/releases/download/20221227/autoware_launch_trace_20221227-150253_universe_rosbag.zip
          unzip autoware_launch_trace_20221227-150253_universe_rosbag.zip

      - name: Create CARET report
        if: ${{ matrix.do_test }}
        run: |
          script_path=`pwd`
          trace_data=`pwd`/autoware_launch_trace_20221227-150253_universe_rosbag
          work_dir=`pwd`/sample_autoware
          export start_strip=25
          export end_strip=0
          export component_list_json=component_list.json
          export target_path_json=target_path.json
          export max_node_depth=20
          export timeout=120
          export draw_all_message_flow=false
          export stats_path_list_csv=stats_path_list.csv

          docker run --rm \
              --user $(id -u):$(id -g) \
              -v /etc/localtime:/etc/localtime:ro \
              -v ${script_path}:/CARET_report \
              -v ${trace_data}:/trace_data \
              -v ${work_dir}:/work \
              -e start_strip \
              -e end_strip \
              -e component_list_json \
              -e target_path_json \
              -e max_node_depth \
              -e timeout \
              -e draw_all_message_flow \
              -e stats_path_list_csv \
              ${{ env.TAGS }}

      - name: Upload report
        if: ${{ matrix.do_test }}
        uses: actions/upload-artifact@v3
        with:
          name: report_trace_data
          path: ./sample_autoware/output/report_trace_data

      - name: Compare report contents
        if: ${{ matrix.do_test }}
        run: |
          sudo apt-get install -y imagemagick
          wget -v https://github.com/tier4/CARET_report/releases/download/20230314/report_autoware_launch_trace_20221227-150253_universe_rosbag.zip
          unzip report_autoware_launch_trace_20221227-150253_universe_rosbag.zip
          mv report_autoware_launch_trace_20221227-150253_universe_rosbag reference_result
          export report_dir_1=`pwd`/reference_result
          export report_dir_2=`pwd`/sample_autoware/output/report_trace_data
          sh `pwd`/report/compare/compare.sh
